@model Blog.Models.ViewModels.Comment.CommentViewModel
@{
    ViewBag.Title = "Add";
}

<div class="col-md-9">
    <h1 class="h2">Add comment:</h1>
    <hr>

    @using (Html.BeginForm("Add", "Comments", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.PostId);
        <fieldset>
            @if (!User.Identity.IsAuthenticated)
            {
            <div class="form-group">
                @Html.LabelFor(x => x.GuestName, new { @class = "col-lg-2" })
                @Html.ValidationMessageFor(x => x.GuestName)
                <div class="col-lg-10">
                    @Html.TextBoxFor(n => n.GuestName, new { @class = "form-control", placeholder = "Your name" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.GuestEmail, new { @class = "col-lg-2" })
                <div class="col-lg-10">
                    @Html.TextBoxFor(x => x.GuestEmail, new { @class = "form-control", placeholder = "Your email" })
                    @Html.ValidationMessageFor(x => x.GuestEmail)
                </div>
            </div>
            }
            <div class="form-group">
                @Html.LabelFor(x => x.Content, new { @class = "col-lg-2" })
                <div class="col-lg-10">
                    @Html.TextAreaFor(x => x.Content, new { @class = "form-control", rows = "5", placeholder = "Your comment" })
                    @Html.ValidationMessageFor(x => x.Content)
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-10 col-lg-offset-2">
                    <button type="reset" class="btn btn-default">Cancel</button>
                    <button type="submit" class="btn btn-primary" name="addComment">Add Comment</button>
                </div>
            </div>
        </fieldset>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}